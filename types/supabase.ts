/**
 * This file is auto-generated by an internal tool or script.
 * It reflects the structure of the Supabase database schema.
 * Do not edit this file directly. Instead, update your Drizzle schema
 * (`db/supabase/schema.ts`) and re-generate this file.
 */

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string // uuid
          email: string
          name: string | null
          avatar_url: string | null
          role: string
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          email: string
          name?: string | null
          avatar_url?: string | null
          role?: string
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          email?: string
          name?: string | null
          avatar_url?: string | null
          role?: string
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "documents_user_id_fkey"
            columns: ["id"]
            referencedRelation: "documents"
            referencedColumns: ["user_id"]
          },
          {
            foreignKeyName: "memory_threads_user_id_fkey"
            columns: ["id"]
            referencedRelation: "memory_threads"
            referencedColumns: ["user_id"]
          },
          {
            foreignKeyName: "traces_user_id_fkey"
            columns: ["id"]
            referencedRelation: "traces"
            referencedColumns: ["user_id"]
          },
          {
            foreignKeyName: "blog_posts_author_id_fkey"
            columns: ["id"]
            referencedRelation: "blog_posts"
            referencedColumns: ["author_id"]
          }
        ]
      }
      workflows: {
        Row: {
          id: string // uuid
          name: string
          description: string | null
          current_step_index: number
          status: string
          metadata: Json | null
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          name: string
          description?: string | null
          current_step_index?: number
          status: string
          metadata?: Json | null
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          name?: string
          description?: string | null
          current_step_index?: number
          status?: string
          metadata?: Json | null
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "workflow_steps_workflow_id_fkey"
            columns: ["id"]
            referencedRelation: "workflow_steps"
            referencedColumns: ["workflow_id"]
          }
        ]
      }
      workflow_steps: {
        Row: {
          id: string // uuid
          workflow_id: string // uuid
          agent_id: string // uuid
          input: string | null
          thread_id: string | null // uuid
          status: string
          result: string | null
          error: string | null
          metadata: Json | null
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          workflow_id: string // uuid
          agent_id: string // uuid
          input?: string | null
          thread_id?: string | null // uuid
          status: string
          result?: string | null
          error?: string | null
          metadata?: Json | null
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          workflow_id?: string // uuid
          agent_id?: string // uuid
          input?: string | null
          thread_id?: string | null // uuid
          status?: string
          result?: string | null
          error?: string | null
          metadata?: Json | null
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "workflow_steps_workflow_id_fkey"
            columns: ["workflow_id"]
            referencedRelation: "workflows"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "workflow_steps_agent_id_fkey"
            columns: ["agent_id"]
            referencedRelation: "agents"
            referencedColumns: ["id"]
          }
        ]
      }
      models: {
        Row: {
          id: string // uuid
          name: string
          provider: string
          model_id: string
          max_tokens: number
          input_cost_per_token: string // numeric
          output_cost_per_token: string // numeric
          supports_vision: boolean
          supports_functions: boolean
          supports_streaming: boolean
          default_temperature: string // numeric
          default_top_p: string // numeric
          default_frequency_penalty: string // numeric
          default_presence_penalty: string // numeric
          context_window: number
          description: string | null
          category: string
          capabilities: Json
          metadata: Json | null
          base_url: string | null
          api_key: string | null
          status: string
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          name: string
          provider: string
          model_id: string
          max_tokens?: number
          input_cost_per_token?: string // numeric
          output_cost_per_token?: string // numeric
          supports_vision?: boolean
          supports_functions?: boolean
          supports_streaming?: boolean
          default_temperature?: string // numeric
          default_top_p?: string // numeric
          default_frequency_penalty?: string // numeric
          default_presence_penalty?: string // numeric
          context_window?: number
          description?: string | null
          category?: string
          capabilities?: Json
          metadata?: Json | null
          base_url?: string | null
          api_key?: string | null
          status?: string
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          name?: string
          provider?: string
          model_id?: string
          max_tokens?: number
          input_cost_per_token?: string // numeric
          output_cost_per_token?: string // numeric
          supports_vision?: boolean
          supports_functions?: boolean
          supports_streaming?: boolean
          default_temperature?: string // numeric
          default_top_p?: string // numeric
          default_frequency_penalty?: string // numeric
          default_presence_penalty?: string // numeric
          context_window?: number
          description?: string | null
          category?: string
          capabilities?: Json
          metadata?: Json | null
          base_url?: string | null
          api_key?: string | null
          status?: string
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "agents_model_id_fkey"
            columns: ["id"]
            referencedRelation: "agents"
            referencedColumns: ["model_id"]
          }
        ]
      }
      tools: {
        Row: {
          id: string // uuid
          name: string
          description: string
          parameters_schema: Json // jsonb
          category: string | null
          implementation: string | null
          is_enabled: boolean | null
          version: string | null
          tags: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          name: string
          description: string
          parameters_schema: Json // jsonb
          category?: string | null
          implementation?: string | null
          is_enabled?: boolean | null
          version?: string | null
          tags?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          name?: string
          description?: string
          parameters_schema?: Json // jsonb
          category?: string | null
          implementation?: string | null
          is_enabled?: boolean | null
          version?: string | null
          tags?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "agent_tools_tool_id_fkey"
            columns: ["id"]
            referencedRelation: "agent_tools"
            referencedColumns: ["tool_id"]
          }
        ]
      }
      agent_personas: {
        Row: {
          id: string // uuid
          name: string
          description: string
          system_prompt_template: string
          model_settings: Json | null // jsonb
          capabilities: Json | null // jsonb
          tags: Json | null // jsonb
          version: number | null
          is_enabled: boolean | null
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          name: string
          description: string
          system_prompt_template: string
          model_settings?: Json | null // jsonb
          capabilities?: Json | null // jsonb
          tags?: Json | null // jsonb
          version?: number | null
          is_enabled?: boolean | null
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          name?: string
          description?: string
          system_prompt_template?: string
          model_settings?: Json | null // jsonb
          capabilities?: Json | null // jsonb
          tags?: Json | null // jsonb
          version?: number | null
          is_enabled?: boolean | null
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "agents_persona_id_fkey"
            columns: ["id"]
            referencedRelation: "agents"
            referencedColumns: ["persona_id"]
          }
        ]
      }
      agents: {
        Row: {
          id: string // uuid
          name: string
          description: string
          model_id: string // uuid
          system_prompt: string | null
          persona_id: string | null // uuid
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          name: string
          description: string
          model_id: string // uuid
          system_prompt?: string | null
          persona_id?: string | null // uuid
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          name?: string
          description?: string
          model_id?: string // uuid
          system_prompt?: string | null
          persona_id?: string | null // uuid
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "agents_model_id_fkey"
            columns: ["model_id"]
            referencedRelation: "models"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "agents_persona_id_fkey"
            columns: ["persona_id"]
            referencedRelation: "agent_personas"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "agent_tools_agent_id_fkey"
            columns: ["id"]
            referencedRelation: "agent_tools"
            referencedColumns: ["agent_id"]
          },
           {
            foreignKeyName: "memory_threads_agent_id_fkey"
            columns: ["id"]
            referencedRelation: "memory_threads"
            referencedColumns: ["agent_id"]
          },
          {
            foreignKeyName: "workflow_steps_agent_id_fkey"
            columns: ["id"]
            referencedRelation: "workflow_steps"
            referencedColumns: ["agent_id"]
          }
        ]
      }
      agent_tools: {
        Row: {
          agent_id: string // uuid
          tool_id: string // uuid
          created_at: string // timestamp with time zone
        }
        Insert: {
          agent_id: string // uuid
          tool_id: string // uuid
          created_at?: string // timestamp with time zone
        }
        Update: {
          agent_id?: string // uuid
          tool_id?: string // uuid
          created_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "agent_tools_agent_id_fkey"
            columns: ["agent_id"]
            referencedRelation: "agents"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "agent_tools_tool_id_fkey"
            columns: ["tool_id"]
            referencedRelation: "tools"
            referencedColumns: ["id"]
          }
        ]
      }
      settings: {
        Row: {
          category: string
          key: string
          value: string
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          category: string
          key: string
          value: string
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          category?: string
          key?: string
          value?: string
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: []
      }
      documents: {
        Row: {
          id: string // uuid
          content: string
          embedding: string | null // text in schema, represents vector
          source_url: string | null
          document_type: string | null
          user_id: string | null // uuid
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          content: string
          embedding?: string | null // text in schema
          source_url?: string | null
          document_type?: string | null
          user_id?: string | null // uuid
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          content?: string
          embedding?: string | null // text in schema
          source_url?: string | null
          document_type?: string | null
          user_id?: string | null // uuid
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "documents_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      traces: {
        Row: {
          id: string // uuid
          name: string
          start_time: string // timestamp with time zone
          end_time: string // timestamp with time zone
          duration_ms: string // numeric
          status: string
          user_id: string | null // uuid
          session_id: string | null
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          name: string
          start_time: string // timestamp with time zone
          end_time: string // timestamp with time zone
          duration_ms: string // numeric
          status: string
          user_id?: string | null // uuid
          session_id?: string | null
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          name?: string
          start_time?: string // timestamp with time zone
          end_time?: string // timestamp with time zone
          duration_ms?: string // numeric
          status?: string
          user_id?: string | null // uuid
          session_id?: string | null
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "traces_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "spans_trace_id_fkey"
            columns: ["id"]
            referencedRelation: "spans"
            referencedColumns: ["trace_id"]
          },
          {
            foreignKeyName: "events_trace_id_fkey"
            columns: ["id"]
            referencedRelation: "events"
            referencedColumns: ["trace_id"]
          }
        ]
      }
      spans: {
        Row: {
          id: string // uuid
          trace_id: string // uuid
          parent_span_id: string | null // uuid
          name: string
          start_time: string // timestamp with time zone
          end_time: string // timestamp with time zone
          duration_ms: string // numeric
          status: string
          attributes: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          trace_id: string // uuid
          parent_span_id?: string | null // uuid
          name: string
          start_time: string // timestamp with time zone
          end_time: string // timestamp with time zone
          duration_ms: string // numeric
          status: string
          attributes?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          trace_id?: string // uuid
          parent_span_id?: string | null // uuid
          name?: string
          start_time?: string // timestamp with time zone
          end_time?: string // timestamp with time zone
          duration_ms?: string // numeric
          status?: string
          attributes?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "spans_trace_id_fkey"
            columns: ["trace_id"]
            referencedRelation: "traces"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "spans_parent_span_id_fkey"
            columns: ["parent_span_id"]
            referencedRelation: "spans"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "events_span_id_fkey"
            columns: ["id"]
            referencedRelation: "events"
            referencedColumns: ["span_id"]
          }
        ]
      }
      events: {
        Row: {
          id: string // uuid
          trace_id: string // uuid
          span_id: string | null // uuid
          name: string
          timestamp: string // timestamp with time zone
          attributes: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          trace_id: string // uuid
          span_id?: string | null // uuid
          name: string
          timestamp?: string // timestamp with time zone
          attributes?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          trace_id?: string // uuid
          span_id?: string | null // uuid
          name?: string
          timestamp?: string // timestamp with time zone
          attributes?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "events_trace_id_fkey"
            columns: ["trace_id"]
            referencedRelation: "traces"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "events_span_id_fkey"
            columns: ["span_id"]
            referencedRelation: "spans"
            referencedColumns: ["id"]
          }
        ]
      }
      blog_posts: {
        Row: {
          id: string // uuid
          title: string
          content: string
          excerpt: string | null
          author_id: string | null // uuid
          image_url: string | null
          tags: Json | null // jsonb
          featured: boolean | null
          published_at: string | null // timestamp with time zone
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          title: string
          content: string
          excerpt?: string | null
          author_id?: string | null // uuid
          image_url?: string | null
          tags?: Json | null // jsonb
          featured?: boolean | null
          published_at?: string | null // timestamp with time zone
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          title?: string
          content?: string
          excerpt?: string | null
          author_id?: string | null // uuid
          image_url?: string | null
          tags?: Json | null // jsonb
          featured?: boolean | null
          published_at?: string | null // timestamp with time zone
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "blog_posts_author_id_fkey"
            columns: ["author_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      gql_cache: {
        Row: {
          id: string // text
          query: string
          variables: string | null
          response: string
          created_at: string // timestamp without time zone
        }
        Insert: {
          id?: string // text
          query: string
          variables?: string | null
          response: string
          created_at?: string // timestamp without time zone
        }
        Update: {
          id?: string // text
          query?: string
          variables?: string | null
          response?: string
          created_at?: string // timestamp without time zone
        }
        Relationships: []
      }
      memory_threads: {
        Row: {
          id: string // uuid
          user_id: string | null // uuid
          agent_id: string | null // uuid
          name: string
          summary: string | null
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          user_id?: string | null // uuid
          agent_id?: string | null // uuid
          name: string
          summary?: string | null
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          user_id?: string | null // uuid
          agent_id?: string | null // uuid
          name?: string
          summary?: string | null
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "memory_threads_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "memory_threads_agent_id_fkey"
            columns: ["agent_id"]
            referencedRelation: "agents"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "messages_thread_id_fkey"
            columns: ["id"]
            referencedRelation: "messages"
            referencedColumns: ["thread_id"]
          }
        ]
      }
      messages: {
        Row: {
          id: string // uuid
          thread_id: string // uuid
          role: string
          content: string
          tool_call_id: string | null
          tool_name: string | null
          tool_arguments: Json | null // jsonb
          tool_result: Json | null // jsonb
          attachments: Json | null // jsonb
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          thread_id: string // uuid
          role: string
          content: string
          tool_call_id?: string | null
          tool_name?: string | null
          tool_arguments?: Json | null // jsonb
          tool_result?: Json | null // jsonb
          attachments?: Json | null // jsonb
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          thread_id?: string // uuid
          role?: string
          content?: string
          tool_call_id?: string | null
          tool_name?: string | null
          tool_arguments?: Json | null // jsonb
          tool_result?: Json | null // jsonb
          attachments?: Json | null // jsonb
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "messages_thread_id_fkey"
            columns: ["thread_id"]
            referencedRelation: "memory_threads"
            referencedColumns: ["id"]
          }
        ]
      }
      database_connections: {
        Row: {
          id: string // uuid
          connection_type: string
          pool_name: string
          connection_url: string
          max_connections: number
          idle_timeout_ms: number
          connection_timeout_ms: number
          status: string
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          connection_type: string
          pool_name: string
          connection_url: string
          max_connections: number
          idle_timeout_ms: number
          connection_timeout_ms: number
          status: string
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          connection_type?: string
          pool_name?: string
          connection_url?: string
          max_connections?: number
          idle_timeout_ms?: number
          connection_timeout_ms?: number
          status?: string
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "database_transactions_connection_id_fkey"
            columns: ["id"]
            referencedRelation: "database_transactions"
            referencedColumns: ["connection_id"]
          }
        ]
      }
      database_transactions: {
        Row: {
          id: string // uuid
          connection_id: string // uuid
          transaction_type: string
          start_time: string // timestamp with time zone
          end_time: string | null // timestamp with time zone
          duration_ms: number | null
          status: string
          query_count: number
          error_message: string | null // text
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          connection_id: string // uuid
          transaction_type: string
          start_time: string // timestamp with time zone
          end_time?: string | null // timestamp with time zone
          duration_ms?: number | null
          status: string
          query_count: number
          error_message?: string | null // text
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          connection_id?: string // uuid
          transaction_type?: string
          start_time?: string // timestamp with time zone
          end_time?: string | null // timestamp with time zone
          duration_ms?: number | null
          status?: string
          query_count?: number
          error_message?: string | null // text
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "database_transactions_connection_id_fkey"
            columns: ["connection_id"]
            referencedRelation: "database_connections"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "database_queries_transaction_id_fkey"
            columns: ["id"]
            referencedRelation: "database_queries"
            referencedColumns: ["transaction_id"]
          }
        ]
      }
      database_queries: {
        Row: {
          id: string // uuid
          transaction_id: string | null // uuid
          query_text: string
          query_type: string
          execution_time_ms: number | null
          row_count: number | null
          status: string
          error_message: string | null // text
          created_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          transaction_id?: string | null // uuid
          query_text: string
          query_type: string
          execution_time_ms?: number | null
          row_count?: number | null
          status: string
          error_message?: string | null // text
          created_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          transaction_id?: string | null // uuid
          query_text?: string
          query_type?: string
          execution_time_ms?: number | null
          row_count?: number | null
          status?: string
          error_message?: string | null // text
          created_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "database_queries_transaction_id_fkey"
            columns: ["transaction_id"]
            referencedRelation: "database_transactions"
            referencedColumns: ["id"]
          }
        ]
      }
      scheduled_tasks: {
        Row: {
          id: string // uuid
          name: string
          description: string | null
          cron_expression: string
          job_name: string
          sql_command: string
          is_active: boolean
          last_run_at: string | null // timestamp with time zone
          next_run_at: string | null // timestamp with time zone
          run_count: number
          error_count: number
          last_error: string | null
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
          updated_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          name: string
          description?: string | null
          cron_expression: string
          job_name: string
          sql_command: string
          is_active: boolean
          last_run_at?: string | null // timestamp with time zone
          next_run_at?: string | null // timestamp with time zone
          run_count?: number
          error_count?: number
          last_error?: string | null
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          name?: string
          description?: string | null
          cron_expression?: string
          job_name?: string
          sql_command?: string
          is_active?: boolean
          last_run_at?: string | null // timestamp with time zone
          next_run_at?: string | null // timestamp with time zone
          run_count?: number
          error_count?: number
          last_error?: string | null
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
          updated_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "scheduled_task_runs_task_id_fkey"
            columns: ["id"]
            referencedRelation: "scheduled_task_runs"
            referencedColumns: ["task_id"]
          }
        ]
      }
      scheduled_task_runs: {
        Row: {
          id: string // uuid
          task_id: string // uuid
          start_time: string // timestamp with time zone
          end_time: string | null // timestamp with time zone
          duration_ms: number | null
          status: string
          result_summary: string | null // text
          error_message: string | null // text
          metadata: Json | null // jsonb
          created_at: string // timestamp with time zone
        }
        Insert: {
          id?: string // uuid
          task_id: string // uuid
          start_time: string // timestamp with time zone
          end_time?: string | null // timestamp with time zone
          duration_ms?: number | null
          status: string
          result_summary?: string | null // text
          error_message?: string | null // text
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
        }
        Update: {
          id?: string // uuid
          task_id?: string // uuid
          start_time?: string // timestamp with time zone
          end_time?: string | null // timestamp with time zone
          duration_ms?: number | null
          status?: string
          result_summary?: string | null // text
          error_message?: string | null // text
          metadata?: Json | null // jsonb
          created_at?: string // timestamp with time zone
        }
        Relationships: [
          {
            foreignKeyName: "scheduled_task_runs_task_id_fkey"
            columns: ["task_id"]
            referencedRelation: "scheduled_tasks"
            referencedColumns: ["id"]
          }
        ]
      }
      mdx_documents: {
        Row: {
          id: string
          title: string | null
          content: string | null
          metadata: Json | null
          user_id: string | null
          created_at: string
          updated_at: string | null
        }
        Insert: {
          id?: string
          title?: string | null
          content?: string | null
          metadata?: Json | null
          user_id?: string | null
          created_at?: string
          updated_at?: string | null
        }
        Update: {
          id?: string
          title?: string | null
          content?: string | null
          metadata?: Json | null
          user_id?: string | null
          created_at?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "mdx_documents_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      content: {
        Row: {
          id: string
          type: string | null
          data: Json
          source_url: string | null
          processed_at: string | null
          status: string | null
          user_id: string | null
          created_at: string
          updated_at: string | null
        }
        Insert: {
          id?: string
          type?: string | null
          data: Json
          source_url?: string | null
          processed_at?: string | null
          status?: string | null
          user_id?: string | null
          created_at?: string
          updated_at?: string | null
        }
        Update: {
          id?: string
          type?: string | null
          data?: Json
          source_url?: string | null
          processed_at?: string | null
          status?: string | null
          user_id?: string | null
          created_at?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "content_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      system_metrics: {
        Row: {
          id: string
          metric_name: string
          value: number
          timestamp: string
          tags: Json | null
          unit: string | null
          created_at: string
        }
        Insert: {
          id?: string
          metric_name: string
          value: number
          timestamp: string
          tags?: Json | null
          unit?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          metric_name?: string
          value?: number
          timestamp?: string
          tags?: Json | null
          unit?: string | null
          created_at?: string
        }
        Relationships: []
      }
      model_performance: {
        Row: {
          id: string
          model_name: string
          model_version: string | null
          task_type: string | null
          metrics: Json
          dataset_name: string | null
          evaluation_notes: string | null
          parameters: Json | null
          recorded_at: string
          created_at: string
          updated_at: string | null
        }
        Insert: {
          id?: string
          model_name: string
          model_version?: string | null
          task_type?: string | null
          metrics: Json
          dataset_name?: string | null
          evaluation_notes?: string | null
          parameters?: Json | null
          recorded_at?: string
          created_at?: string
          updated_at?: string | null
        }
        Update: {
          id?: string
          model_name?: string
          model_version?: string | null
          task_type?: string | null
          metrics?: Json
          dataset_name?: string | null
          evaluation_notes?: string | null
          parameters?: Json | null
          recorded_at?: string
          created_at?: string
          updated_at?: string | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      match_documents: {
        Args: {
          query_embedding: string
          match_threshold: number
          match_count: number
          p_user_id?: string
          p_document_type?: string
        }
        Returns: Array<{
          id: string
          content: string
          source_url: string | null
          document_type: string | null
          user_id: string | null
          metadata: Json | null
          similarity: number
          created_at: string
        }>
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
